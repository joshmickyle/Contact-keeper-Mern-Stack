{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JJ\\\\Downloads\\\\react_contact_keeper-master\\\\client\\\\src\\\\context\\\\contact\\\\ContactState.js\";\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport ContactContext from './contactContext';\nimport contactReducer from './contactReducer';\nimport { GET_CONTACTS, ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, CLEAR_FILTER, FILTER_CONTACTS, CLEAR_CONTACTS, CONTACT_ERROR } from '../types';\n\nconst ContactState = props => {\n  const initialState = {\n    contacts: null,\n    current: null,\n    filtered: null,\n    error: null\n  };\n  const [state, dispatch] = useReducer(contactReducer, initialState); // Get Contacts\n\n  const getContacts = async () => {\n    try {\n      const res = await axios.get('/api/contacts');\n      dispatch({\n        type: GET_CONTACTS,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.msg\n      });\n    }\n  }; // Add Contact\n\n\n  const addContact = async contact => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/contacts', contact, config);\n      dispatch({\n        type: ADD_CONTACT,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.msg\n      });\n    }\n  }; // Delete Contact\n\n\n  const deleteContact = async id => {\n    try {\n      await axios.delete(`/api/contacts/${id}`);\n      dispatch({\n        type: DELETE_CONTACT,\n        payload: id\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.msg\n      });\n    }\n  }; // Update Contact\n\n\n  const updateContact = async contact => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.put(`/api/contacts/${contact._id}`, contact, config);\n      dispatch({\n        type: UPDATE_CONTACT,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.msg\n      });\n    }\n  }; // Clear Contacts\n\n\n  const clearContacts = () => {\n    dispatch({\n      type: CLEAR_CONTACTS\n    });\n  }; // Set Current Contact\n\n\n  const setCurrent = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  }; // Clear Current Contact\n\n\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  }; // Filter Contacts\n\n\n  const filterContacts = text => {\n    dispatch({\n      type: FILTER_CONTACTS,\n      payload: text\n    });\n  }; // Clear Filter\n\n\n  const clearFilter = () => {\n    dispatch({\n      type: CLEAR_FILTER\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(ContactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      current: state.current,\n      filtered: state.filtered,\n      error: state.error,\n      getContacts,\n      addContact,\n      deleteContact,\n      updateContact,\n      setCurrent,\n      clearCurrent,\n      clearContacts,\n      filterContacts,\n      clearFilter\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default ContactState;","map":{"version":3,"sources":["C:/Users/JJ/Downloads/react_contact_keeper-master/client/src/context/contact/ContactState.js"],"names":["React","useReducer","axios","ContactContext","contactReducer","GET_CONTACTS","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","CLEAR_FILTER","FILTER_CONTACTS","CLEAR_CONTACTS","CONTACT_ERROR","ContactState","props","initialState","contacts","current","filtered","error","state","dispatch","getContacts","res","get","type","payload","data","err","response","msg","addContact","contact","config","headers","post","deleteContact","id","delete","updateContact","put","_id","clearContacts","setCurrent","clearCurrent","filterContacts","text","clearFilter","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\nimport axios from 'axios';\n\nimport ContactContext from './contactContext';\nimport contactReducer from './contactReducer';\nimport {\n    GET_CONTACTS,\n    ADD_CONTACT,\n    DELETE_CONTACT,\n    SET_CURRENT,\n    CLEAR_CURRENT,\n    UPDATE_CONTACT,\n    CLEAR_FILTER,\n    FILTER_CONTACTS,\n    CLEAR_CONTACTS,\n    CONTACT_ERROR\n} from '../types';\n\nconst ContactState = props => {\n    const initialState = {\n        contacts: null,\n        current: null,\n        filtered: null,\n        error: null\n    };\n\n    const [ state, dispatch ] = useReducer(contactReducer, initialState);\n\n    // Get Contacts\n    const getContacts = async () => {\n        try {\n            const res = await axios.get('/api/contacts');\n\n            dispatch({ type: GET_CONTACTS, payload: res.data });\n        } catch (err) {\n            dispatch({ type: CONTACT_ERROR, payload: err.response.msg });\n        }\n    };\n\n    // Add Contact\n    const addContact = async contact => {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        };\n\n        try {\n            const res = await axios.post('/api/contacts', contact, config);\n\n            dispatch({ type: ADD_CONTACT, payload: res.data });\n        } catch (err) {\n            dispatch({ type: CONTACT_ERROR, payload: err.response.msg });\n        }\n    };\n\n    // Delete Contact\n    const deleteContact = async id => {\n        try {\n            await axios.delete(`/api/contacts/${id}`);\n\n            dispatch({ type: DELETE_CONTACT, payload: id });\n        } catch (err) {\n            dispatch({ type: CONTACT_ERROR, payload: err.response.msg });\n        }\n    };\n\n    // Update Contact\n    const updateContact = async contact => {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        };\n\n        try {\n            const res = await axios.put(`/api/contacts/${contact._id}`, contact, config);\n\n            dispatch({ type: UPDATE_CONTACT, payload: res.data });\n        } catch (err) {\n            dispatch({ type: CONTACT_ERROR, payload: err.response.msg });\n        }\n\n    };\n\n    // Clear Contacts\n    const clearContacts = () => {\n        dispatch({ type: CLEAR_CONTACTS });\n    };\n\n    // Set Current Contact\n    const setCurrent = contact => {\n        dispatch({ type: SET_CURRENT, payload: contact });\n    };\n\n    // Clear Current Contact\n    const clearCurrent = () => {\n        dispatch({ type: CLEAR_CURRENT });\n    };\n\n    // Filter Contacts\n    const filterContacts = text => {\n        dispatch({ type: FILTER_CONTACTS, payload: text });\n    };\n\n    // Clear Filter\n    const clearFilter = () => {\n        dispatch({ type: CLEAR_FILTER });\n    };\n\n    return (\n        <ContactContext.Provider\n            value = {{\n              contacts: state.contacts,\n              current: state.current,\n              filtered: state.filtered,\n              error: state.error,\n              getContacts,\n              addContact,\n              deleteContact,\n              updateContact,\n              setCurrent,\n              clearCurrent,\n              clearContacts,\n              filterContacts,\n              clearFilter\n            }}>\n            { props.children }\n        </ContactContext.Provider>\n    );\n};\n\nexport default ContactState;"]},"metadata":{},"sourceType":"module"}