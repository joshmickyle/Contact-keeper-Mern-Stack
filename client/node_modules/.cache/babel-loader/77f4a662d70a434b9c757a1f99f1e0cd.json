{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JJ\\\\Desktop\\\\contact-keeper\\\\client\\\\src\\\\components\\\\contacts\\\\ContactForm.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport ContactContext from '../../context/contact/contactContext';\n\nconst ContactForm = () => {\n  const contactContext = useContext(ContactContext);\n  const {\n    addContact,\n    current,\n    clearCurrent,\n    updateContact\n  } = contactContext;\n  useEffect(() => {\n    if (current !== null) {\n      setContact(current);\n    } else {\n      setContact({\n        name: '',\n        email: '',\n        phone: '',\n        type: 'personal'\n      });\n    }\n  }, [contactContext, current]);\n  const [contact, setContact] = useState({\n    name: '',\n    email: '',\n    phone: '',\n    type: 'personal'\n  });\n  const {\n    name,\n    email,\n    phone,\n    type\n  } = contact;\n\n  const onChange = e => setContact({ ...contact,\n    [e.target.name]: e.target.value\n  });\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (current === null) {\n      // Add New Contact\n      addContact(contact);\n    } else {\n      // Update Contact\n      updateContact(contact);\n    } // Clear Form\n\n\n    clearAll();\n  };\n\n  const clearAll = () => {\n    clearCurrent();\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, current ? 'Edit Contact' : 'Add Contact'), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Name\",\n    name: \"name\",\n    value: name,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    placeholder: \"Email\",\n    name: \"email\",\n    value: email,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Phone\",\n    name: \"phone\",\n    value: phone,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, \"Contact Type\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"type\",\n    value: \"personal\",\n    onChange: onChange,\n    checked: type === 'personal',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }), \" Personal\", ' ', /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"type\",\n    value: \"professional\",\n    onChange: onChange,\n    checked: type === 'professional',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }), \" Professional\", /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: current ? 'Update Contact' : 'Add Contact',\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  })), current && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 26\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-light btn-block\",\n    onClick: clearAll,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, \"Clear\")));\n};\n/*\nContactItem.propTypes = {\n    contact: PropTypes.object.isRequired\n};\n*/\n\n\nexport default ContactForm;","map":{"version":3,"sources":["C:/Users/JJ/Desktop/contact-keeper/client/src/components/contacts/ContactForm.js"],"names":["React","useState","useContext","useEffect","ContactContext","ContactForm","contactContext","addContact","current","clearCurrent","updateContact","setContact","name","email","phone","type","contact","onChange","e","target","value","onSubmit","preventDefault","clearAll"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\n\nimport ContactContext from '../../context/contact/contactContext';\n\nconst ContactForm = () => {\n    const contactContext = useContext(ContactContext);\n\n    const { addContact, current, clearCurrent, updateContact } = contactContext;\n\n    useEffect(() => {\n        if (current !== null) {\n            setContact(current);\n        } else {\n            setContact({\n               name: '',\n               email: '',\n               phone: '',\n               type: 'personal'\n            });\n        }\n    }, [contactContext, current]);\n\n    const [contact, setContact] = useState({\n        name: '',\n        email: '',\n        phone: '',\n        type: 'personal'\n    });\n\n    const { name, email, phone, type } = contact;\n\n    const onChange = e => setContact({ ...contact, [e.target.name]: e.target.value });\n\n    const onSubmit = e => {\n      e.preventDefault();\n\n      if (current === null) {\n          // Add New Contact\n          addContact(contact);\n      } else {\n          // Update Contact\n          updateContact(contact);\n      }\n      // Clear Form\n      clearAll();\n    };\n\n    const clearAll = () => {\n        clearCurrent();\n    };\n\n    return (\n        <form onSubmit={onSubmit}>\n            <h2 className=\"text-primary\">{ current ? 'Edit Contact' : 'Add Contact' }</h2>\n            <input\n                type=\"text\"\n                placeholder=\"Name\"\n                name=\"name\"\n                value={name}\n                onChange={onChange}\n            />\n            <input\n                type=\"email\"\n                placeholder=\"Email\"\n                name=\"email\"\n                value={email}\n                onChange={onChange}\n            />\n            <input\n                type=\"text\"\n                placeholder=\"Phone\"\n                name=\"phone\"\n                value={phone}\n                onChange={onChange}\n            />\n            <h5>Contact Type</h5>\n            <input\n                type=\"radio\"\n                name=\"type\"\n                value=\"personal\"\n                onChange={onChange}\n                checked={type === 'personal'}\n            /> Personal{' '}\n            <input\n                type=\"radio\"\n                name=\"type\"\n                value=\"professional\"\n                onChange={onChange}\n                checked={type === 'professional'}\n            /> Professional\n            <div>\n                <input\n                    type=\"submit\"\n                    value={ current ? 'Update Contact' : 'Add Contact' }\n                    className=\"btn btn-primary\"\n                />\n            </div>\n            { current && <div>\n                <button className=\"btn btn-light btn-block\" onClick={clearAll}>Clear</button>\n            </div> }\n        </form>\n    );\n};\n\n/*\nContactItem.propTypes = {\n    contact: PropTypes.object.isRequired\n};\n*/\n\nexport default ContactForm;"]},"metadata":{},"sourceType":"module"}