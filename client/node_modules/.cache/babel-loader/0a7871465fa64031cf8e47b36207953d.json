{"ast":null,"code":"import _defineProperty from\"C:\\\\Users\\\\JJ\\\\Downloads\\\\react_contact_keeper-master\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"C:\\\\Users\\\\JJ\\\\Downloads\\\\react_contact_keeper-master\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:\\\\Users\\\\JJ\\\\Downloads\\\\react_contact_keeper-master\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useContext,useEffect}from'react';import ContactContext from'../../context/contact/contactContext';var ContactForm=function ContactForm(){var contactContext=useContext(ContactContext);var addContact=contactContext.addContact,current=contactContext.current,clearCurrent=contactContext.clearCurrent,updateContact=contactContext.updateContact;useEffect(function(){if(current!==null){setContact(current);}else{setContact({name:'',email:'',phone:'',type:'personal'});}},[contactContext,current]);var _useState=useState({name:'',email:'',phone:'',type:'personal'}),_useState2=_slicedToArray(_useState,2),contact=_useState2[0],setContact=_useState2[1];var name=contact.name,email=contact.email,phone=contact.phone,type=contact.type;var onChange=function onChange(e){return setContact(_objectSpread(_objectSpread({},contact),{},_defineProperty({},e.target.name,e.target.value)));};var onSubmit=function onSubmit(e){e.preventDefault();if(current===null){// Add New Contact\naddContact(contact);}else{// Update Contact\nupdateContact(contact);}// Clear Form\nclearAll();};var clearAll=function clearAll(){clearCurrent();};return/*#__PURE__*/React.createElement(\"form\",{onSubmit:onSubmit},/*#__PURE__*/React.createElement(\"h2\",{className:\"text-primary\"},current?'Edit Contact':'Add Contact'),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",placeholder:\"Name\",name:\"name\",value:name,onChange:onChange}),/*#__PURE__*/React.createElement(\"input\",{type:\"email\",placeholder:\"Email\",name:\"email\",value:email,onChange:onChange}),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",placeholder:\"Phone\",name:\"phone\",value:phone,onChange:onChange}),/*#__PURE__*/React.createElement(\"h5\",null,\"Contact Type\"),/*#__PURE__*/React.createElement(\"input\",{type:\"radio\",name:\"type\",value:\"personal\",onChange:onChange,checked:type==='personal'}),\" Personal\",' ',/*#__PURE__*/React.createElement(\"input\",{type:\"radio\",name:\"type\",value:\"professional\",onChange:onChange,checked:type==='professional'}),\" Professional\",/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"input\",{type:\"submit\",value:current?'Update Contact':'Add Contact',className:\"btn btn-primary\"})),current&&/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-light btn-block\",onClick:clearAll},\"Clear\")));};/*\nContactItem.propTypes = {\n    contact: PropTypes.object.isRequired\n};\n*/export default ContactForm;","map":{"version":3,"sources":["C:/Users/JJ/Downloads/react_contact_keeper-master/client/src/components/contacts/ContactForm.js"],"names":["React","useState","useContext","useEffect","ContactContext","ContactForm","contactContext","addContact","current","clearCurrent","updateContact","setContact","name","email","phone","type","contact","onChange","e","target","value","onSubmit","preventDefault","clearAll"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\n\nimport ContactContext from '../../context/contact/contactContext';\n\nconst ContactForm = () => {\n    const contactContext = useContext(ContactContext);\n\n    const { addContact, current, clearCurrent, updateContact } = contactContext;\n\n    useEffect(() => {\n        if (current !== null) {\n            setContact(current);\n        } else {\n            setContact({\n               name: '',\n               email: '',\n               phone: '',\n               type: 'personal'\n            });\n        }\n    }, [contactContext, current]);\n\n    const [contact, setContact] = useState({\n        name: '',\n        email: '',\n        phone: '',\n        type: 'personal'\n    });\n\n    const { name, email, phone, type } = contact;\n\n    const onChange = e => setContact({ ...contact, [e.target.name]: e.target.value });\n\n    const onSubmit = e => {\n      e.preventDefault();\n\n      if (current === null) {\n          // Add New Contact\n          addContact(contact);\n      } else {\n          // Update Contact\n          updateContact(contact);\n      }\n      // Clear Form\n      clearAll();\n    };\n\n    const clearAll = () => {\n        clearCurrent();\n    };\n\n    return (\n        <form onSubmit={onSubmit}>\n            <h2 className=\"text-primary\">{ current ? 'Edit Contact' : 'Add Contact' }</h2>\n            <input\n                type=\"text\"\n                placeholder=\"Name\"\n                name=\"name\"\n                value={name}\n                onChange={onChange}\n            />\n            <input\n                type=\"email\"\n                placeholder=\"Email\"\n                name=\"email\"\n                value={email}\n                onChange={onChange}\n            />\n            <input\n                type=\"text\"\n                placeholder=\"Phone\"\n                name=\"phone\"\n                value={phone}\n                onChange={onChange}\n            />\n            <h5>Contact Type</h5>\n            <input\n                type=\"radio\"\n                name=\"type\"\n                value=\"personal\"\n                onChange={onChange}\n                checked={type === 'personal'}\n            /> Personal{' '}\n            <input\n                type=\"radio\"\n                name=\"type\"\n                value=\"professional\"\n                onChange={onChange}\n                checked={type === 'professional'}\n            /> Professional\n            <div>\n                <input\n                    type=\"submit\"\n                    value={ current ? 'Update Contact' : 'Add Contact' }\n                    className=\"btn btn-primary\"\n                />\n            </div>\n            { current && <div>\n                <button className=\"btn btn-light btn-block\" onClick={clearAll}>Clear</button>\n            </div> }\n        </form>\n    );\n};\n\n/*\nContactItem.propTypes = {\n    contact: PropTypes.object.isRequired\n};\n*/\n\nexport default ContactForm;"]},"metadata":{},"sourceType":"module"}