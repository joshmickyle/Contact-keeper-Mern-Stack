{"ast":null,"code":"import _objectWithoutProperties from\"C:\\\\Users\\\\JJ\\\\Downloads\\\\react_contact_keeper-master\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";import React,{useContext}from'react';import{Route,Redirect}from'react-router-dom';import AuthContext from'../../context/auth/authContext';var PrivateRoute=function PrivateRoute(_ref){var Component=_ref.component,rest=_objectWithoutProperties(_ref,[\"component\"]);var authContext=useContext(AuthContext);var isAuthenticated=authContext.isAuthenticated,loading=authContext.loading;return/*#__PURE__*/React.createElement(Route,Object.assign({},rest,{render:function render(props){return!isAuthenticated&&!loading?/*#__PURE__*/React.createElement(Redirect,{to:\"/login\"}):/*#__PURE__*/React.createElement(Component,props);}}));};export default PrivateRoute;","map":{"version":3,"sources":["C:/Users/JJ/Downloads/react_contact_keeper-master/client/src/components/routing/PrivateRoute.js"],"names":["React","useContext","Route","Redirect","AuthContext","PrivateRoute","Component","component","rest","authContext","isAuthenticated","loading","props"],"mappings":"6MAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,KAAkC,OAAlC,CACA,OAASC,KAAT,CAAgBC,QAAhB,KAAgC,kBAAhC,CAEA,MAAOC,CAAAA,WAAP,KAAwB,gCAAxB,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,MAAuC,IAAzBC,CAAAA,SAAyB,MAApCC,SAAoC,CAAXC,IAAW,8CACxD,GAAMC,CAAAA,WAAW,CAAGR,UAAU,CAACG,WAAD,CAA9B,CADwD,GAEhDM,CAAAA,eAFgD,CAEnBD,WAFmB,CAEhDC,eAFgD,CAE/BC,OAF+B,CAEnBF,WAFmB,CAE/BE,OAF+B,CAIxD,mBACI,oBAAC,KAAD,kBAAYH,IAAZ,EAAmB,MAAM,CAAE,gBAAAI,KAAK,QAAI,CAACF,eAAD,EAAoB,CAACC,OAArB,cAC5B,oBAAC,QAAD,EAAU,EAAE,CAAC,QAAb,EAD4B,cAE5B,oBAAC,SAAD,CAAeC,KAAf,CAFwB,EAAhC,GADJ,CAMH,CAVD,CAYA,cAAeP,CAAAA,YAAf","sourcesContent":["import React, { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nimport AuthContext from '../../context/auth/authContext';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n    const authContext = useContext(AuthContext);\n    const { isAuthenticated, loading } = authContext;\n\n    return (\n        <Route { ...rest } render={props => !isAuthenticated && !loading\n            ? ( <Redirect to='/login' />)\n            : ( <Component {...props} />)\n        } />\n    );\n};\n\nexport default PrivateRoute;"]},"metadata":{},"sourceType":"module"}