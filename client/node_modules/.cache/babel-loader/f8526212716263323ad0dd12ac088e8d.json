{"ast":null,"code":"import React,{Fragment,useContext,useEffect}from'react';import{CSSTransition,TransitionGroup}from'react-transition-group';import ContactContext from'../../context/contact/contactContext';import ContactItem from'./ContactItem';import Spinner from\"../layout/Spinner\";var Contacts=function Contacts(){var contactContext=useContext(ContactContext);var contacts=contactContext.contacts,filtered=contactContext.filtered,getContacts=contactContext.getContacts,loading=contactContext.loading;useEffect(function(){getContacts();// eslint-disable-next-line\n},[]);if(contacts!==null&&contacts.length===0&&!loading){return/*#__PURE__*/React.createElement(\"h4\",null,\"Please add a contact\");}return/*#__PURE__*/React.createElement(Fragment,null,contacts!==null&&!loading?/*#__PURE__*/React.createElement(TransitionGroup,null,filtered!==null?filtered.map(function(contact){return/*#__PURE__*/React.createElement(CSSTransition,{key:contact._id,timeout:500,classNames:\"item\"},/*#__PURE__*/React.createElement(ContactItem,{contact:contact}));}):contacts.map(function(contact){return/*#__PURE__*/React.createElement(CSSTransition,{key:contact._id,timeout:500,classNames:\"item\"},/*#__PURE__*/React.createElement(ContactItem,{contact:contact}));})):/*#__PURE__*/React.createElement(Spinner,null));};export default Contacts;","map":{"version":3,"sources":["C:/Users/JJ/Downloads/react_contact_keeper-master/client/src/components/contacts/Contacts.js"],"names":["React","Fragment","useContext","useEffect","CSSTransition","TransitionGroup","ContactContext","ContactItem","Spinner","Contacts","contactContext","contacts","filtered","getContacts","loading","length","map","contact","_id"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,UAA1B,CAAsCC,SAAtC,KAAuD,OAAvD,CACA,OAASC,aAAT,CAAwBC,eAAxB,KAA+C,wBAA/C,CAEA,MAAOC,CAAAA,cAAP,KAA2B,sCAA3B,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CACA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CACnB,GAAMC,CAAAA,cAAc,CAAGR,UAAU,CAACI,cAAD,CAAjC,CADmB,GAEXK,CAAAA,QAFW,CAEkCD,cAFlC,CAEXC,QAFW,CAEDC,QAFC,CAEkCF,cAFlC,CAEDE,QAFC,CAESC,WAFT,CAEkCH,cAFlC,CAESG,WAFT,CAEsBC,OAFtB,CAEkCJ,cAFlC,CAEsBI,OAFtB,CAInBX,SAAS,CAAC,UAAM,CACZU,WAAW,GACX;AACH,CAHQ,CAGN,EAHM,CAAT,CAKA,GAAIF,QAAQ,GAAK,IAAb,EAAqBA,QAAQ,CAACI,MAAT,GAAoB,CAAzC,EAA8C,CAACD,OAAnD,CAA4D,CACxD,mBAAO,qDAAP,CACH,CAED,mBACI,oBAAC,QAAD,MACMH,QAAQ,GAAK,IAAb,EAAqB,CAACG,OAAtB,cACE,oBAAC,eAAD,MACMF,QAAQ,GAAK,IAAb,CACIA,QAAQ,CAACI,GAAT,CAAa,SAAAC,OAAO,qBACjB,oBAAC,aAAD,EACG,GAAG,CAAEA,OAAO,CAACC,GADhB,CAEG,OAAO,CAAE,GAFZ,CAGG,UAAU,CAAC,MAHd,eAKG,oBAAC,WAAD,EAAa,OAAO,CAAED,OAAtB,EALH,CADiB,EAApB,CADJ,CASIN,QAAQ,CAACK,GAAT,CAAa,SAAAC,OAAO,qBAClB,oBAAC,aAAD,EACI,GAAG,CAAEA,OAAO,CAACC,GADjB,CAEI,OAAO,CAAE,GAFb,CAGI,UAAU,CAAC,MAHf,eAKI,oBAAC,WAAD,EAAa,OAAO,CAAED,OAAtB,EALJ,CADkB,EAApB,CAVV,CADF,cAqBE,oBAAC,OAAD,MAtBR,CADJ,CA0BH,CAvCD,CAyCA,cAAeR,CAAAA,QAAf","sourcesContent":["import React, { Fragment, useContext, useEffect } from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nimport ContactContext from '../../context/contact/contactContext';\nimport ContactItem from './ContactItem';\nimport Spinner from \"../layout/Spinner\";\n\nconst Contacts = () => {\n    const contactContext = useContext(ContactContext);\n    const { contacts, filtered, getContacts, loading } = contactContext;\n\n    useEffect(() => {\n        getContacts();\n        // eslint-disable-next-line\n    }, []);\n\n    if (contacts !== null && contacts.length === 0 && !loading) {\n        return <h4>Please add a contact</h4>;\n    }\n\n    return (\n        <Fragment>\n            { contacts !== null && !loading ? (\n                <TransitionGroup>\n                    { filtered !== null\n                        ? filtered.map(contact =>\n                            (<CSSTransition\n                                key={contact._id}\n                                timeout={500}\n                                classNames=\"item\"\n                            >\n                                <ContactItem contact={contact} />\n                            </CSSTransition>))\n                        : contacts.map(contact => (\n                            <CSSTransition\n                                key={contact._id}\n                                timeout={500}\n                                classNames=\"item\"\n                            >\n                                <ContactItem contact={contact} />\n                            </CSSTransition>))\n                    }\n                </TransitionGroup>\n            ) : <Spinner /> }\n        </Fragment>\n    );\n};\n\nexport default Contacts;"]},"metadata":{},"sourceType":"module"}