{"ast":null,"code":"import React,{useContext,useRef,useEffect}from'react';import ContactContext from'../../context/contact/contactContext';var ContactFilter=function ContactFilter(){var contactContext=useContext(ContactContext);var text=useRef('');var filterContacts=contactContext.filterContacts,clearFilter=contactContext.clearFilter,filtered=contactContext.filtered;useEffect(function(){if(filtered===null){text.current.value='';}});var onChange=function onChange(e){if(text.current.value!==''){filterContacts(e.target.value);}else{clearFilter();}};return/*#__PURE__*/React.createElement(\"form\",null,/*#__PURE__*/React.createElement(\"input\",{type:\"text\",ref:text,placeholder:\"Filter Contacts...\",onChange:onChange}));};export default ContactFilter;","map":{"version":3,"sources":["C:/Users/JJ/Downloads/react_contact_keeper-master/client/src/components/contacts/ContactFilter.js"],"names":["React","useContext","useRef","useEffect","ContactContext","ContactFilter","contactContext","text","filterContacts","clearFilter","filtered","current","value","onChange","e","target"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,CAA4BC,MAA5B,CAAoCC,SAApC,KAAqD,OAArD,CAEA,MAAOC,CAAAA,cAAP,KAA2B,sCAA3B,CAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CACxB,GAAMC,CAAAA,cAAc,CAAGL,UAAU,CAACG,cAAD,CAAjC,CACA,GAAMG,CAAAA,IAAI,CAAGL,MAAM,CAAC,EAAD,CAAnB,CAFwB,GAGhBM,CAAAA,cAHgB,CAG0BF,cAH1B,CAGhBE,cAHgB,CAGAC,WAHA,CAG0BH,cAH1B,CAGAG,WAHA,CAGaC,QAHb,CAG0BJ,cAH1B,CAGaI,QAHb,CAKxBP,SAAS,CAAC,UAAM,CACZ,GAAIO,QAAQ,GAAK,IAAjB,CAAuB,CACnBH,IAAI,CAACI,OAAL,CAAaC,KAAb,CAAqB,EAArB,CACH,CACJ,CAJQ,CAAT,CAMA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAAAC,CAAC,CAAI,CAClB,GAAIP,IAAI,CAACI,OAAL,CAAaC,KAAb,GAAuB,EAA3B,CAA+B,CAC3BJ,cAAc,CAACM,CAAC,CAACC,MAAF,CAASH,KAAV,CAAd,CACH,CAFD,IAEO,CACHH,WAAW,GACd,CACJ,CAND,CAQA,mBACI,6CACI,6BACI,IAAI,CAAC,MADT,CAEI,GAAG,CAAEF,IAFT,CAGI,WAAW,CAAC,oBAHhB,CAII,QAAQ,CAAEM,QAJd,EADJ,CADJ,CAUH,CA7BD,CA+BA,cAAeR,CAAAA,aAAf","sourcesContent":["import React, { useContext, useRef, useEffect } from 'react';\n\nimport ContactContext from '../../context/contact/contactContext';\n\nconst ContactFilter = () => {\n    const contactContext = useContext(ContactContext);\n    const text = useRef('');\n    const { filterContacts, clearFilter, filtered } = contactContext;\n\n    useEffect(() => {\n        if (filtered === null) {\n            text.current.value = '';\n        }\n    });\n\n    const onChange = e => {\n        if (text.current.value !== '') {\n            filterContacts(e.target.value);\n        } else {\n            clearFilter();\n        }\n    };\n\n    return (\n        <form>\n            <input\n                type=\"text\"\n                ref={text}\n                placeholder=\"Filter Contacts...\"\n                onChange={onChange}\n            />\n        </form>\n    );\n};\n\nexport default ContactFilter;"]},"metadata":{},"sourceType":"module"}